function Graphics.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push pointer 0
return
function Graphics.drawPixel 0
push argument 0
pop pointer 0
push argument 3
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
call Screen.drawPixel 2
pop temp 0
push constant 0
return
function Graphics.drawHorizontalLine 1
push argument 0
pop pointer 0
push argument 1
pop local 0
label WHILE_EXP0
push local 0
push argument 2
lt
not
if-goto WHILE_END0
push pointer 0
push local 0
push argument 3
push argument 4
call Graphics.drawPixel 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Graphics.drawVerticalLine 1
push argument 0
pop pointer 0
push argument 2
pop local 0
label WHILE_EXP0
push local 0
push argument 3
lt
not
if-goto WHILE_END0
push pointer 0
push argument 1
push local 0
push argument 4
call Graphics.drawPixel 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Graphics.drawRectangle 2
push argument 0
pop pointer 0
push argument 1
pop local 0
label WHILE_EXP0
push local 0
push argument 3
lt
not
if-goto WHILE_END0
push argument 2
pop local 1
label WHILE_EXP1
push local 1
push argument 4
lt
not
if-goto WHILE_END1
push pointer 0
push local 0
push local 1
push argument 5
call Graphics.drawPixel 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Graphics.drawPostureBar 1
push argument 0
pop pointer 0
push argument 3
push argument 5
call Math.multiply 2
push constant 100
call Math.divide 2
pop local 0
push pointer 0
push argument 1
push argument 2
push argument 1
push local 0
add
push constant 1
sub
push argument 2
push argument 4
add
push constant 1
sub
push constant 1
call Graphics.drawRectangle 6
pop temp 0
push pointer 0
push argument 1
push local 0
add
push argument 2
push argument 1
push argument 3
add
push constant 1
sub
push argument 2
push argument 4
add
push constant 1
sub
push constant 0
call Graphics.drawRectangle 6
pop temp 0
push constant 0
return
function Graphics.drawCharacter 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
push argument 1
push argument 3
add
push constant 1
sub
push argument 2
push argument 4
add
push constant 1
sub
push constant 1
call Graphics.drawRectangle 6
pop temp 0
push argument 6
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push argument 1
push argument 3
add
push argument 1
push argument 3
add
push argument 5
add
push constant 1
sub
push argument 2
push argument 4
push constant 2
call Math.divide 2
add
push constant 1
call Graphics.drawHorizontalLine 5
pop temp 0
goto IF_END0
label IF_FALSE0
push pointer 0
push argument 1
push argument 5
sub
push argument 1
push constant 1
sub
push argument 2
push argument 4
push constant 2
call Math.divide 2
add
push constant 1
call Graphics.drawHorizontalLine 5
pop temp 0
label IF_END0
push constant 0
return
